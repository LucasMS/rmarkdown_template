#!/bin/bash

# This script should be run from the main project folder.
# This is a helper script that knits the Rmd from code to its corresponding
# folder in results. For instance, if the code is at `PATH/code/01_dothis/` the results
# will be at `PATH/results/01_dothis/`.
# It assumes R. Pandoc is derived depending on where you are working on.
# Also, it forces output directory to be $project_dir if on caucluster

# Set Pandoc caucluster path
pandoc_caucluster=/zfshome/sw/spack/spack0.18.1/usr/opt/spack/linux-rocky8-x86_64/gcc-12.1.0/pandoc-2.14.0.3-rdmtfng72ukihhncvb3q3qsh45kw6aux/bin/pandoc

# If you are running on the caucluster, set caucluster pandoc path.
if [ -x "${pandoc_caucluster}" ]; then
  # PANDOC location ----------------------------------------------------------
  module load pandoc/2.14.0.3  
  pandoc_loc="${pandoc_caucluster}"

else
  # PANDOC location ---------------------------------------------------------
  host=$(uname -a | cut -f1 -d " ")
  if [ "${host}" == "Linux" ]; then
    # Location for local ubunutu
    pandoc_loc=/usr/lib/rstudio/resources/app/bin/quarto/bin/tools/x86_64
  else
    # Otherwise assumes its a mac
    pandoc_loc=/Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools
  fi

fi

# Set file paths -------------------------------------------------------------
# Set locations of files ar dir
base_dir=$(realpath "$(pwd)")
input_file=$(realpath "$1")
# # Extract the filename from the full path and remove the .Rmd extension
core_file_name=$(basename "$input_file" | sed 's/\.Rmd$//')
# # Make dirout from script path. Substitute '$base_dir/code/' with '$base_dir/results/'
dir_in=$(dirname $input_file)
# If your code is in nested somewhere in the `code` folder, the output will
# be in the corresponding folder in `results`.
# If not, the output will be in the `base_dir` folder.
dir_out=$(echo $dir_in | sed "s|${base_dir}/code|${base_dir}/results|")
echo $dir_out
output_file=${dir_out}/${core_file_name}'.html'
fig_path=${dir_out}'/'${core_file_name}'/'

# # Make directory
mkdir -p "${dir_out}"

# # Render Rmarkdown file from main project folder, so relative paths inside the
# # Rmd will work.
# # Assumes R and pandoc are locally installed at conda_envs/r
# # otherwise, remove the source activate and use your pandoc instalation, for
# # instance `/usr/lib/rstudio/bin/pandoc`
# # This adds conda to the path, so it is can be found in the command below:
# # https://saturncloud.io/blog/calling-conda-source-activate-from-bash-script-a-guide/
# # To look for the PANDOC installation, open Rstudio and type Sys.getenv("RSTUDIO_PANDOC")

R -e "Sys.setenv(RSTUDIO_PANDOC='${pandoc_loc}');
  rmarkdown::render(
      input = '${input_file}',
      output_file ='${output_file}',
      knit_root_dir = '${base_dir}', # render from base directory.
      params = list(
        fig_path = '${fig_path}',
        d_out = '${dir_out}'
      )
  )"

